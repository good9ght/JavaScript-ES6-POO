{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_service","NegociacaoService","_init","listar","then","negociacoes","forEach","negociacao","adicionar","catch","erro","texto","setInterval","importar","evento","preventDefault","_criarNegociacao","cadastra","mensagem","_limparCampos","Negociacao","DataHelper","textoParaData","value","apagar","esvaziar","ordenar","coluna","inverterOrdem","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n\n    constructor() {\n        /*\n        |----------------------------------------------------------------------\n        | bind()\n        |----------------------------------------------------------------------\n        |\n        | O querySelector é um método pertencente ao objeto document, ou seja,\n        | dentro dele, é utilizado o 'this' para se referir ao document.\n        | Ao ser colocado em uma variável ele perderá o contexto do objeto,\n        | deixará de ser um método e passará a ser uma função.\n        | O método bind(objeto) adiciona o contexto do objeto à função.\n        |\n        */\n        let $ = document.querySelector.bind(document);\n\n        /*\n        |----------------------------------------------------------------------\n        | Evitando percorrer o DOM muitas vezes\n        |----------------------------------------------------------------------\n        |\n        | Definir no construtor as variáveis que recebem elementos do DOM\n        | evita que o mesmo seja percorrido toda vez que uma função for chamada.\n        |\n        */\n        this._inputData = $(\"#data\");\n        this._inputQuantidade = $(\"#quantidade\");\n        this._inputValor = $(\"#valor\");\n\n        this._ordemAtual = '';\n\n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacoesView($(\"#negociacoesView\")),\n            \"adicionar\", \"esvaziar\", \"ordenar\", \"inverterOrdem\"\n        );\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($(\"#mensagemView\")),\n            \"texto\"\n        );\n\n        this._service = new NegociacaoService();\n\n        this._init();\n    }\n\n    _init() {\n        /*\n        |----------------------------------------------------------------------\n        | Promises\n        |----------------------------------------------------------------------\n        |\n        | Se o then() retorna algo é possivel adicionar outro then() que receberá\n        | o seu retorno.\n        |\n        */\n        this._service\n            .listar()\n            .then(negociacoes => negociacoes.forEach(negociacao =>\n                this._listaNegociacoes.adicionar(negociacao)))\n            .catch(erro => this._mensagem.texto = erro);\n\n        setInterval(() => this.importar(), 3000);\n    }\n\n    adicionar(evento) {\n        evento.preventDefault();\n\n        let negociacao = this._criarNegociacao();\n\n        this._service\n        .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adicionar(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limparCampos();\n            })\n            .catch(erro => this._mensagem.texto = erro);\n    }\n\n    _criarNegociacao() {\n        return new Negociacao(\n            DataHelper.textoParaData(this._inputData.value),\n            this._inputQuantidade.value,\n            this._inputValor.value\n        );\n    }\n\n    _limparCampos() {\n        this._inputData.value = \"\";\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0;\n    }\n\n    apagar() {\n        this._service\n            .apagar()\n            .then(mensagem => {\n                this._mensagem.texto = mensagem;\n                this._listaNegociacoes.esvaziar();\n            })\n            .catch(erro => {\n                this._mensagem.texto = erro;\n            });\n    }\n\n    importar() {\n        this._service\n            .importar(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao =>\n                this._listaNegociacoes.adicionar(negociacao));\n                this._mensagem.texto = \"Negociações Importadas.\";\n            })\n            .catch(erro => this._mensagem.texto = erro)\n    }\n\n    ordenar(coluna) {\n        if(this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverterOrdem();\n        }\n        else {\n            this._listaNegociacoes.ordenar((a, b) => a[coluna] - b[coluna]);\n            this._ordemAtual = coluna;\n        }\n    }\n}\n"]}